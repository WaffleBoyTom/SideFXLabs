#type:     node
#context:  sop
#internal: labs::chaotic_shapes::1.0
#icon:     SOP/labs::chaotic_shapes::1.0
#since:    20.0

= Labs Chaotic Shapes =

"""Generates different chaotic maps."""

This node generates point clouds based on the [chaotic map|https://en.wikipedia.org/wiki/List_of_chaotic_maps] formulas (sometimes known as attractors). It can also create color and pscale attributes based on normalized point density.

The currently supported chaotic maps include [Clifford Attractors|https://paulbourke.net/fractals/clifford/] and [Peter de Jong Attractors|https://paulbourke.net/fractals/peterdejong/].

NOTE:
    The original formulas only define the X and Y positions. For the Z position, we use our own formula.


@parameters

    Constants Presets:
        #id: presets
        A list of chaotic map types and their respective constant variations. When you are in the __Manual__ mode, the output is determined by the map type and your custom constant values.
            
    Reset Constants:
        #id: applypreset
        Resets the constants back to the current preset values.
        
    Point Count:
        #id: pointcount
        The total number of points to generate.
        
    Compute Normalized Density:
        #id: computedensity
        The density is equal to the number of points found in __Search Distance__ divided by __Maximum Search Points__. The output range is 0-1.

    === Point Density ===

    Density Attribute:
        #id: densityattribute
        The name of the density attribute.
        
    Search Distance:
        #id: searchdistance
        Each point looks for neighbour points within this radius.
        
    Maximum Search Points:
        #id: maxpts
        The maximum number of neighbour points for each point to search for.
        
    === Point Color ===

    Add Color by Density:
        #id: addcolorbydensity
        Creates a color attribute based on the computed density.
        
    Color Ramp:
        #id: rampcolor
        The color spectrum is mapped to the 0-1 range of the density attribute.
        
    === Point Radius ===

    Add Pscale by Density:
        #id: addpscalebydensity
        Creates a pscale attribute based on the computed density.
        
    Pscale at Min Density:
        #id: minimumpscale
        The pscale when density equals 0.
        
    Pscale at Max Density:
        #id: maximumpscale
        The pscale when density equals 1.
        
    Display as Spheres:
        #id: displayasspheres
        Display points as spheres in the viewport. This sets the detail attribute `gl_spherepoints` to 1.
