MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::settlement_connections::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -4.5 -12.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	scatter_settlement_points 1 1 "input1"
}
inputs
{
0 	scatter_settlement_points 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 -0.49999998882412922 8.8832999902963632 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_rest_attribute.init"
Content-Type: text/plain

type = rest
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_rest_attribute.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 5.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	delete_color_attribute 1 1 "input1"
}
inputs
{
0 	delete_color_attribute 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_rest_attribute.parm"
Content-Type: text/plain

{
version 0.8
mode	[ 0	locks=0 ]	(	"store"	)
restattribname	[ 0	locks=0 ]	(	_sco_rest	)
file	[ 0	locks=0 ]	(	""	)
nml	[ 0	locks=0 ]	(	"off"	)
normalattribname	[ 0	locks=0 ]	(	rnml	)
xform	[ 0	locks=0 ]	(	"off"	)
xformattribname	[ 0	locks=0 ]	(	restxform	)
quadric	[ 0	locks=0 ]	(	"off"	)
quadricattribname	[ 0	locks=0 ]	(	Pref	)
precision	[ 0	locks=0 ]	(	"auto"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_rest_attribute.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_yposition_to_zero.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_yposition_to_zero.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.503 4.849
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	store_rest_attribute 1 1 "input1"
}
inputs
{
0 	store_rest_attribute 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_yposition_to_zero.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"@P.y = 0;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_yposition_to_zero.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_to_rest.init"
Content-Type: text/plain

type = rest
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_to_rest.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 1.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	calculate_connections_descending 1 1 "input1"
}
inputs
{
0 	calculate_connections_descending 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_to_rest.parm"
Content-Type: text/plain

{
version 0.8
mode	[ 0	locks=0 ]	(	"extract"	)
restattribname	[ 0	locks=0 ]	(	_sco_rest	)
file	[ 0	locks=0 ]	(	""	)
nml	[ 0	locks=0 ]	(	"off"	)
normalattribname	[ 0	locks=0 ]	(	rnml	)
xform	[ 0	locks=0 ]	(	"off"	)
xformattribname	[ 0	locks=0 ]	(	restxform	)
quadric	[ 0	locks=0 ]	(	"off"	)
quadricattribname	[ 0	locks=0 ]	(	Pref	)
precision	[ 0	locks=0 ]	(	"auto"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_to_rest.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_descending.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_descending.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.503 2.849
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	calculate_connections_ascending 1 1 "input1"
}
inputs
{
0 	calculate_connections_ascending 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_descending.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "enableangle"
        label   "Avoid Small Angles between Connections"
        type    toggle
        default { "1" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "anglemode"
        label   "Angle Limit Mode"
        type    ordinal
        default { "0" }
        menu {
            "0" "Uniform Angle Limit"
            "1" "Varied Angle Limit Based on Distance"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "uniformangle"
        label   "Angle Limit"
        type    float
        default { "28" }
        hidewhen "{ anglemode == 1 }"
        range   { 0! 90 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "min_distance"
        label   "Min Distance"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "max_distance"
        label   "Max Distance"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "angle_threshold"
        label   "Angle Threshold"
        type    ramp_flt
        default { "2" }
        range   { 1! 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_descending.chn"
Content-Type: text/plain

{
    channel min_distance {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mindistance\") }
    }
    channel max_distance {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../maxdistance\") }
    }
    channel angle_threshold1value {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../maxangle\") }
    }
    channel angle_threshold2value {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../minangle\") }
    }
    channel enableangle {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enableangle\") }
    }
    channel anglemode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../anglemode\") }
    }
    channel uniformangle {
      lefttype = extend
      righttype = extend
      default = 28
      flags = 0
      segment { length = 0 value = 28 28 expr = ch(\"../uniformangle\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_descending.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int enable_angle = chi(\"enableangle\");
int angle_mode = chi(\"anglemode\");
float uniform_angle = chf(\"uniformangle\");
float min_distance = chf(\"min_distance\");
float max_distance = chf(\"max_distance\");

vector target_vector, check_vector, target_pos, check_pos;
float angle_threshold, target_length, check_length, check_angle;
int trigger;

// s@endpts = \"\";

// For each point assign a target point.
// This target point is going to be the reference for comparison.
// Compare all the other points with the target point.

// This script evaluates pairs of points in a descending order.

for (int i = 0; i < @numpt; i++)
{   
    if (i == @ptnum) continue;
    
    trigger = 0;
    
    target_pos = point(0, \"P\", i);
    target_vector = target_pos - @P;
    target_length = length(target_vector);

    for (int j = 0; j < @numpt; j++)
    {
        if (j == @ptnum || j == i) continue;

        check_pos = point(0, \"P\", j);
        check_vector = check_pos - @P;
        check_length = length(check_vector);

        check_angle = degrees(acos(dot(normalize(target_vector), normalize(check_vector))));

        if (target_length > check_length)
        {
            check_length = fit(check_length, min_distance, max_distance, 0, 1);
            
            if (enable_angle == 1)
            {
                if (angle_mode == 0)
                {
                    angle_threshold = uniform_angle;
                }
                else
                {
                    angle_threshold = chramp(\"angle_threshold\", check_length);
                }
            }
            else
            {
                angle_threshold = 0;
            }

            if (check_angle < angle_threshold)
            {
                // Mark the check point for deletion.
                trigger = 1;
                break;
            }
        }
    }

    if (!trigger && i < @ptnum)
    {
        int end_points[] = point(0, \"_sco_end_points\", i);

        foreach (int index; int value; end_points)
        {
            if (value == @ptnum)
            {
                addprim(0, \"polyline\", @ptnum, i); 

                s@_sco_endpts += itoa(i) + \" \";
            }
        }
    }
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
enableangle	[ 8	locks=0 ]	(	[ enableangle	1 ] 	)
anglemode	[ 8	locks=0 ]	(	[ anglemode	0 ] 	)
uniformangle	[ 0	locks=0 ]	(	[ uniformangle	28 ] 	)
min_distance	[ 0	locks=0 ]	(	[ min_distance	0 ] 	)
max_distance	[ 0	locks=0 ]	(	[ max_distance	0 ] 	)
angle_threshold	[ 0	locks=0 ]	(	2	)
angle_threshold1pos	[ 0	locks=0 ]	(	0	)
angle_threshold1value	[ 0	locks=0 ]	(	[ angle_threshold1value	0 ] 	)
angle_threshold1interp	[ 0	locks=0 ]	(	"linear"	)
angle_threshold2pos	[ 0	locks=0 ]	(	1	)
angle_threshold2value	[ 0	locks=0 ]	(	[ angle_threshold2value	0 ] 	)
angle_threshold2interp	[ 0	locks=0 ]	(	"linear"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_descending.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_ascending.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_ascending.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.503 3.849
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	set_yposition_to_zero 1 1 "input1"
}
inputs
{
0 	set_yposition_to_zero 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_ascending.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "enableangle"
        label   "Avoid Small Angles between Connections"
        type    toggle
        default { "1" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "anglemode"
        label   "Angle Limit Mode"
        type    ordinal
        default { "0" }
        menu {
            "0" "Uniform Angle Limit"
            "1" "Varied Angle Limit Based on Distance"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "uniformangle"
        label   "Angle Limit"
        type    float
        default { "28" }
        hidewhen "{ anglemode == 1 }"
        range   { 0! 90 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "angle_threshold"
        label   "Angle Threshold"
        type    ramp_flt
        default { "2" }
        range   { 1! 10 }
    }
    parm {
        name    "min_distance"
        label   "Min Distance"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "max_distance"
        label   "Max Distance"
        type    float
        default { "0" }
        range   { 0 1 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_ascending.chn"
Content-Type: text/plain

{
    channel angle_threshold1value {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 4.6296296119689941 4.6296296119689941 expr = ch(\"../maxangle\") }
    }
    channel angle_threshold2value {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../minangle\") }
    }
    channel min_distance {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mindistance\") }
    }
    channel max_distance {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../maxdistance\") }
    }
    channel enableangle {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enableangle\") }
    }
    channel anglemode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../anglemode\") }
    }
    channel uniformangle {
      lefttype = extend
      righttype = extend
      default = 28
      flags = 0
      segment { length = 0 value = 28 28 expr = ch(\"../uniformangle\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_ascending.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int enable_angle = chi(\"enableangle\");
int angle_mode = chi(\"anglemode\");
float uniform_angle = chf(\"uniformangle\");
float min_distance = chf(\"min_distance\");
float max_distance = chf(\"max_distance\");

vector target_vector, check_vector, target_pos, check_pos;
float angle_threshold, target_length, check_length, check_angle;
int trigger, counter;

i[]@_sco_end_points;

// For each point assign a target point.
// This target point is going to be the reference for comparison.
// Compare all the other points with the target point.

// This script evaluates pairs of points in an ascending order.

for (int i = 0; i < @numpt; i++)
{   
    if (i == @ptnum) continue;
    
    trigger = 0;
    
    target_pos = point(0, \"P\", i);
    target_vector = target_pos - @P;
    target_length = length(target_vector);

    for (int j = 0; j < @numpt; j++)
    {
        if (j == @ptnum || j == i) continue;

        check_pos = point(0, \"P\", j);
        check_vector = check_pos - @P;
        check_length = length(check_vector);

        check_angle = degrees(acos(dot(normalize(target_vector), normalize(check_vector))));

        if (target_length > check_length)
        {
            check_length = fit(check_length, min_distance, max_distance, 0, 1);
            
            if (enable_angle == 1)
            {
                if (angle_mode == 0)
                {
                    angle_threshold = uniform_angle;
                }
                else
                {
                    angle_threshold = chramp(\"angle_threshold\", check_length);
                }
            }
            else
            {
                angle_threshold = 0;
            } 

            // printf(\"check length %d angle threshold %d\\n\", check_length, angle_threshold);
            if (check_angle < angle_threshold)
            {
                // Mark the check point for deletion.
                trigger = 1;
                break;
            }
        }
    }

    if (!trigger && i > @ptnum)
    {
        // The check point is a candidate for connection.
        // We will add it to the list for the second pass evaluation.
        push(@_sco_end_points, i);
    }
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
enableangle	[ 8	locks=0 ]	(	[ enableangle	1 ] 	)
anglemode	[ 8	locks=0 ]	(	[ anglemode	0 ] 	)
uniformangle	[ 0	locks=0 ]	(	[ uniformangle	28 ] 	)
angle_threshold	[ 0	locks=0 ]	(	2	)
angle_threshold1pos	[ 0	locks=0 ]	(	0	)
angle_threshold1value	[ 8	locks=0 ]	(	[ angle_threshold1value	0 ] 	)
angle_threshold1interp	[ 0	locks=0 ]	(	"linear"	)
min_distance	[ 0	locks=0 ]	(	[ min_distance	0 ] 	)
max_distance	[ 0	locks=0 ]	(	[ max_distance	0 ] 	)
angle_threshold2pos	[ 0	locks=0 ]	(	1	)
angle_threshold2value	[ 0	locks=0 ]	(	[ angle_threshold2value	0 ] 	)
angle_threshold2interp	[ 0	locks=0 ]	(	"linear"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/calculate_connections_ascending.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/INPUT.init"
Content-Type: text/plain

type = null
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/INPUT.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 7.845
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/INPUT.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/INPUT.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CONNECTIONS.init"
Content-Type: text/plain

type = output
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CONNECTIONS.def"
Content-Type: text/plain

sopflags sopflags = 
comment "HDA Code: sco"
position -0.5 -2.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	delete_internal_attributes 1 1 "input1"
}
inputs
{
0 	delete_internal_attributes 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CONNECTIONS.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CONNECTIONS.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_internal_attributes.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_internal_attributes.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.50345 -1.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	rename_attributes 1 1 "input1"
}
inputs
{
0 	rename_attributes 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_internal_attributes.parm"
Content-Type: text/plain

{
version 0.8
usereference	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
doptdel	[ 0	locks=0 ]	(	"on"	)
ptdel	[ 0	locks=0 ]	(	_sco_*	)
dovtxdel	[ 0	locks=0 ]	(	"off"	)
vtxdel	[ 0	locks=0 ]	(	""	)
doprimdel	[ 0	locks=0 ]	(	"off"	)
primdel	[ 0	locks=0 ]	(	""	)
dodtldel	[ 0	locks=0 ]	(	"off"	)
dtldel	[ 0	locks=0 ]	(	""	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_internal_attributes.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_attributes.init"
Content-Type: text/plain

type = attribute
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_attributes.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.50345 -0.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	distance_attribute 1 1 "input1"
}
inputs
{
0 	distance_attribute 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_attributes.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	0	0	0	0	)
_label1_	[ 0	locks=0 ]	(	From	To	)
ptrenames	[ 0	locks=0 ]	(	1	)
ptdel	[ 0	locks=0 ]	(	""	)
ptkeep	[ 0	locks=0 ]	(	*	)
_label2_	[ 0	locks=0 ]	(	From	To	)
vtxrenames	[ 0	locks=0 ]	(	5	)
vtxdel	[ 0	locks=0 ]	(	""	)
vtxkeep	[ 0	locks=0 ]	(	*	)
_label3_	[ 0	locks=0 ]	(	From	To	)
primrenames	[ 0	locks=0 ]	(	0	)
primdel	[ 0	locks=0 ]	(	""	)
primkeep	[ 0	locks=0 ]	(	*	)
_label4_	[ 0	locks=0 ]	(	From	To	)
detailrenames	[ 0	locks=0 ]	(	5	)
dtldel	[ 0	locks=0 ]	(	""	)
dtlkeep	[ 0	locks=0 ]	(	*	)
_label5_	[ 0	locks=0 ]	(	RiName	RiType	Offset	""	)
rmanconversions	[ 0	locks=0 ]	(	5	)
ridefault	[ 0	locks=0 ]	(	"off"	)
updatevar	[ 0	locks=0 ]	(	"on"	)
overwrite	[ 0	locks=0 ]	(	"off"	)
encodenames	[ 0	locks=0 ]	(	"off"	)
frompt0	[ 0	locks=0 ]	(	_sco_endpts	)
topt0	[ 0	locks=0 ]	(	`chs(\"../endpoints\")`	)
fromvtx0	[ 0	locks=0 ]	(	""	)
tovtx0	[ 0	locks=0 ]	(	""	)
fromvtx1	[ 0	locks=0 ]	(	""	)
tovtx1	[ 0	locks=0 ]	(	""	)
fromvtx2	[ 0	locks=0 ]	(	""	)
tovtx2	[ 0	locks=0 ]	(	""	)
fromvtx3	[ 0	locks=0 ]	(	""	)
tovtx3	[ 0	locks=0 ]	(	""	)
fromvtx4	[ 0	locks=0 ]	(	""	)
tovtx4	[ 0	locks=0 ]	(	""	)
fromdtl0	[ 0	locks=0 ]	(	""	)
todtl0	[ 0	locks=0 ]	(	""	)
fromdtl1	[ 0	locks=0 ]	(	""	)
todtl1	[ 0	locks=0 ]	(	""	)
fromdtl2	[ 0	locks=0 ]	(	""	)
todtl2	[ 0	locks=0 ]	(	""	)
fromdtl3	[ 0	locks=0 ]	(	""	)
todtl3	[ 0	locks=0 ]	(	""	)
fromdtl4	[ 0	locks=0 ]	(	""	)
todtl4	[ 0	locks=0 ]	(	""	)
hname0	[ 0	locks=0 ]	(	""	)
riname0	[ 0	locks=0 ]	(	""	)
ritype0	[ 0	locks=0 ]	(	vtx_float	)
rioff0	[ 0	locks=0 ]	(	0	)
hname1	[ 0	locks=0 ]	(	""	)
riname1	[ 0	locks=0 ]	(	""	)
ritype1	[ 0	locks=0 ]	(	vtx_float	)
rioff1	[ 0	locks=0 ]	(	0	)
hname2	[ 0	locks=0 ]	(	""	)
riname2	[ 0	locks=0 ]	(	""	)
ritype2	[ 0	locks=0 ]	(	vtx_float	)
rioff2	[ 0	locks=0 ]	(	0	)
hname3	[ 0	locks=0 ]	(	""	)
riname3	[ 0	locks=0 ]	(	""	)
ritype3	[ 0	locks=0 ]	(	vtx_float	)
rioff3	[ 0	locks=0 ]	(	0	)
hname4	[ 0	locks=0 ]	(	""	)
riname4	[ 0	locks=0 ]	(	""	)
ritype4	[ 0	locks=0 ]	(	vtx_float	)
rioff4	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_attributes.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/distance_attribute.init"
Content-Type: text/plain

type = convertline
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/distance_attribute.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 0.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	reset_to_rest 1 1 "input1"
}
inputs
{
0 	reset_to_rest 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/distance_attribute.chn"
Content-Type: text/plain

{
    channel computelength {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outputdistance\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/distance_attribute.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
sepparm2	[ 0	locks=0 ]	(	)
keeporder	[ 0	locks=0 ]	(	"off"	)
connectpath	[ 0	locks=0 ]	(	"on"	)
closeloops	[ 0	locks=0 ]	(	"off"	)
remove	[ 0	locks=0 ]	(	"off"	)
sepparm	[ 0	locks=0 ]	(	)
computelength	[ 8	locks=0 ]	(	[ computelength	1 ] 	)
lengthname	[ 0	locks=0 ]	(	`chs(\"../distancename\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/distance_attribute.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_color_attribute.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_color_attribute.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.50345 6.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	INPUT 1 1 "input1"
}
inputs
{
0 	INPUT 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_color_attribute.parm"
Content-Type: text/plain

{
version 0.8
usereference	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
doptdel	[ 0	locks=0 ]	(	"on"	)
ptdel	[ 0	locks=0 ]	(	Cd	)
dovtxdel	[ 0	locks=0 ]	(	"off"	)
vtxdel	[ 0	locks=0 ]	(	""	)
doprimdel	[ 0	locks=0 ]	(	"off"	)
primdel	[ 0	locks=0 ]	(	""	)
dodtldel	[ 0	locks=0 ]	(	"off"	)
dtldel	[ 0	locks=0 ]	(	""	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_color_attribute.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

11
store_rest_attribute
set_yposition_to_zero
reset_to_rest
calculate_connections_descending
calculate_connections_ascending
INPUT
OUT_CONNECTIONS
delete_internal_attributes
rename_attributes
distance_attribute
delete_color_attribute

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
